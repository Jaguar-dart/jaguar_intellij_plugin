package org.jaguar.dart.projectWizard;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.jetbrains.annotations.NotNull;

import javax.swing.*;
import java.awt.*;
import java.util.HashSet;

public class ProjectCreationStepGui {
  private JTextField templateTxt;
  private JPanel rootPanel;
  private JList<String> templatesLst;
  private JLabel jagarExePathLbl;

  private ProjectCreationStepChangeListener myListener;

  public ProjectCreationStepGui() {
    templatesLst.addListSelectionListener(listSelectionEvent -> {
      if (myListener == null) return;
      myListener.guiSettingsChanged();
    });
  }

  public void setTemplates(HashSet<String> templates) {
    templatesLst.removeAll();
    templatesLst.setListData(templates.toArray(new String[templates.size()]));
  }

  public void setProjectCreationStepChangeListener(@NotNull ProjectCreationStepChangeListener listener) {
    myListener = listener;
  }

  public JPanel getRootPanel() {
    return rootPanel;
  }

  public String getTemplateName() {
    String selected = templatesLst.getSelectedValue();

    if (selected == null) return "";

    String[] parts = selected.split(":");

    if (parts.length == 0) return "";

    return parts[0];
  }

  public JComponent getJaguarExePathLbl() {
    return jagarExePathLbl;
  }

  public JComponent getTemplatesLst() {
    return templatesLst;
  }

  public void setJagarExePath(@NotNull String path, boolean valid) {
    if (valid) {
      jagarExePathLbl.setForeground(Color.black);
    } else {
      jagarExePathLbl.setForeground(Color.red);
    }

    jagarExePathLbl.setText(path);
  }

  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    rootPanel = new JPanel();
    rootPanel.setLayout(new GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
    final Spacer spacer1 = new Spacer();
    rootPanel.add(spacer1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, 1, GridConstraints.SIZEPOLICY_FIXED, new Dimension(-1, 5), new Dimension(-1, 5), new Dimension(-1, 5), 0, false));
    final Spacer spacer2 = new Spacer();
    rootPanel.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE, 1, GridConstraints.SIZEPOLICY_FIXED, new Dimension(5, -1), new Dimension(5, -1), new Dimension(5, -1), 0, false));
    final JPanel panel1 = new JPanel();
    panel1.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
    rootPanel.add(panel1, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    final JLabel label1 = new JLabel();
    label1.setText("Jaguar executable path");
    panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final JScrollPane scrollPane1 = new JScrollPane();
    panel1.add(scrollPane1, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    templatesLst = new JList();
    templatesLst.setSelectionMode(0);
    scrollPane1.setViewportView(templatesLst);
    final JLabel label2 = new JLabel();
    label2.setText("Select a template");
    panel1.add(label2, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    jagarExePathLbl = new JLabel();
    jagarExePathLbl.setText("Label");
    panel1.add(jagarExePathLbl, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final Spacer spacer3 = new Spacer();
    rootPanel.add(spacer3, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, 1, new Dimension(-1, 5), new Dimension(-1, 5), new Dimension(-1, 5), 0, false));
    final Spacer spacer4 = new Spacer();
    rootPanel.add(spacer4, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, 1, new Dimension(-1, 5), new Dimension(-1, 5), new Dimension(-1, 5), 0, false));
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return rootPanel;
  }

  public interface ProjectCreationStepChangeListener {
    void guiSettingsChanged();
  }
}
